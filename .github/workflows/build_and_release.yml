name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [linux-x64, win-x64, osx-x64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore

    - name: Publish
      run: dotnet publish -c Release -r ${{ matrix.target }} --no-build --self-contained true --property:PublishDir=./publish -o ./publish

    - name: Create release artifact
      run: |
        mkdir -p release
        tar -czf release/${{ matrix.os }}-${{ matrix.target }}.tar.gz -C publish .
      if: runner.os != 'Windows'
      shell: bash

    - name: Create release artifact (Windows)
      run: |
        mkdir release
        Compress-Archive -Path publish\* -DestinationPath release\${{ matrix.os }}-${{ matrix.target }}.zip
      if: runner.os == 'Windows'
      shell: powershell

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.target }}
        path: release/${{ matrix.os }}-${{ matrix.target }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
