name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ${{ matrix.target.os }}
    strategy:
      matrix:
        target:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-x64
          - os: windows-latest
            runtime: win-x64
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test

    - name: Publish
      run: dotnet publish -c Release -r ${{ matrix.target.runtime }} --property:PublishDir=../publish

    - name: Create release artifact
      run: |
        mkdir release
        $runtime = "${{ matrix.target.runtime }}"
        $release_name = "${{github.event.repository.name}}-${{ matrix.target.runtime }}"
        if ($runtime -eq 'win-x64'){
          Compress-Archive -Path publish\* -DestinationPath "release\$release_name.zip"
        } else {
          tar -C "publish/" -czvf "release/$release_name.tar.gz" .
        }

    - name: Upload release assets
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.event.repository.name}}-${{ matrix.target.runtime }}
        path: release/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: ${{github.event.repository.name}}-*
        merge-multiple: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
